# 한국어 현지화 규칙

## 기본 원칙
- **모든 사용자 인터페이스는 한국어로 표시**
- **에러 메시지는 한국어로 작성**
- **코드 주석은 한국어로 작성**
- **문서는 한국어로 작성**

## VSCode Extension 현지화
```typescript
// ✅ 올바른 사용법
vscode.window.showInformationMessage('파일이 성공적으로 저장되었습니다.')
vscode.window.showErrorMessage('파일을 찾을 수 없습니다.')
vscode.window.showWarningMessage('경고: 이 작업은 되돌릴 수 없습니다.')

// ✅ 명령어 제목도 한국어로
contributes: {
  commands: [
    {
      command: 'extension.saveFile',
      title: '파일 저장'
    }
  ]
}
```

## 에러 메시지 규칙
```typescript
// ✅ 좋은 에러 메시지
throw new Error('설정 파일을 읽을 수 없습니다. 파일 경로를 확인해주세요.')

// ✅ 사용자 친화적 메시지
vscode.window.showErrorMessage(
  '파일을 열 수 없습니다: ' + 
  '파일이 존재하지 않거나 접근 권한이 없습니다.'
)
```

## 주석 작성 규칙
```typescript
/**
 * 사용자 설정을 로드하는 함수
 * @param configPath 설정 파일 경로
 * @returns 설정 객체 또는 null (파일이 없는 경우)
 */
function loadUserConfig(configPath: string): UserConfig | null {
  // 설정 파일 존재 여부 확인
  if (!fs.existsSync(configPath)) {
    return null;
  }
  
  // JSON 파일 읽기 및 파싱
  const configData = fs.readFileSync(configPath, 'utf8');
  return JSON.parse(configData);
}
```

## 문서 작성 규칙
- README.md는 한국어로 작성
- API 문서는 한국어로 작성
- 사용자 가이드는 한국어로 작성
- 코드 예제의 주석은 한국어로 작성
description:
globs:
alwaysApply: false
---
