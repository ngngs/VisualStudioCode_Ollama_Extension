# 오프라인 개발 규칙

## 핵심 원칙
- **모든 외부 API 호출 금지**
- **인터넷 연결이 필요한 라이브러리 사용 금지**
- **로컬 파일 시스템만 사용**
- **모든 기능은 완전히 오프라인에서 작동해야 함**

## 금지되는 패턴
```typescript
// ❌ 금지: 외부 API 호출
fetch('https://api.example.com/data')
axios.get('https://api.example.com/data')

// ❌ 금지: 인터넷 연결이 필요한 라이브러리
import { someOnlineLibrary } from 'online-library'

// ❌ 금지: 웹소켓 연결
new WebSocket('wss://example.com')
```

## 허용되는 패턴
```typescript
// ✅ 허용: 로컬 파일 시스템 접근
import * as fs from 'fs'
import * as path from 'path'
import * as vscode from 'vscode'

// ✅ 허용: 로컬 설정 파일 읽기
const config = vscode.workspace.getConfiguration('extension')

// ✅ 허용: 로컬 데이터 처리
const localData = fs.readFileSync(path.join(__dirname, 'data.json'), 'utf8')
```

## 파일 시스템 사용 규칙
- 사용자 워크스페이스 내 파일만 접근
- 임시 파일은 확장 프로그램의 글로벌 스토리지 사용
- 파일 경로는 플랫폼 독립적으로 작성
- 파일 접근 시 적절한 에러 처리

## 데이터 저장 규칙
- 설정은 VSCode의 workspace 또는 global 설정 사용
- 임시 데이터는 ExtensionContext.globalState 사용
- 로그 파일은 확장 프로그램 디렉토리 내에 저장
description:
globs:
alwaysApply: false
---
